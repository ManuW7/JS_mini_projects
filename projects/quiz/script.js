const starting_page_html = `<main>
  <h1>Brain Quiz</h1>
  <p class="annotation">Test your knowlege!</p>
  <div class="themes_container">
    <button class="theme" name='All'>
      <div class="theme_icon">üåç</div>
      <h3 class="theme_title">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
    </button>
    <button class="theme" name='IT'>
      <div class="theme_icon">üíª</div>
      <h3 class="theme_title">IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</h3>
    </button>
    <button class="theme" name='Science'>
      <div class="theme_icon">üî¨</div>
      <h3 class="theme_title">–ù–∞—É–∫–∞</h3>
    </button>
    <button class="theme" name='History'>
      <div class="theme_icon">üìú</div>
      <h3 class="theme_title">–ò—Å—Ç–æ—Ä–∏—è</h3>
    </button>
  </div>
  <div class="timer_container">
    <input type="checkbox" class="checkbox" id="checkbox" />
    <label class="timer_label" for="checkbox">
      <span class="timer_text">Timer</span>
      <span class="custom_slider"></span>
    </label>
  </div>
  <div class="button_div">
    <button class="start_quiz_btn">Start the quiz</button>
  </div>
</main>`;

const question_page_html = `<main>
  <h1 class="question_header">–í–æ–ø—Ä–æ—Å –Ω–æ–º–µ—Ä</h1>
  <div class="question_text_div">
    <p class="question_text">...</p>
  </div>
  <div class="answer_variants_container">
    <button class="answer A">–û—Ç–≤–µ—Ç A</button>
    <button class="answer B">–û—Ç–≤–µ—Ç B</button>
    <button class="answer C">–û—Ç–≤–µ—Ç C</button>
    <button class="answer D">–û—Ç–≤–µ—Ç D</button>
  </div>
  <div class="timer_line"></div>
</main>`;

const final_page_html = `<main>
  <h1 class="final_page_header">–ò—Ç–æ–≥</h1>
  <div class="results_div">
    <p class="stat total_points">–ù–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤:</p>
    <p class="stat right_answers">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:</p>
    <p class="stat wrong_answers">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:</p>
  </div>
  <p class="thanks">–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!</p>
  <div class="button_div">
    <button class="to_the_main_button">–ù–∞ –≥–ª–∞–≤–Ω—É—é</button>
  </div>
</main>`;

const questions = {
  IT: [
    {
      id: 1,
      question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ HTML?",
      options: [
        "Hyper Text Markup Language",
        "High Tech Modern Language",
        "Hyper Transfer Markup Language",
        "Home Tool Markup Language",
      ],
      correctAnswer: 0,
      difficulty: "easy",
    },
    {
      id: 2,
      question: "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –±—ã–ª —Å–æ–∑–¥–∞–Ω –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º–æ–º?",
      options: ["Java", "Python", "C++", "JavaScript"],
      correctAnswer: 1,
      difficulty: "easy",
    },
    {
      id: 3,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ API?",
      options: [
        "Automatic Programming Interface",
        "Application Programming Interface",
        "Advanced Program Interaction",
        "Application Process Integration",
      ],
      correctAnswer: 1,
      difficulty: "medium",
    },
    {
      id: 4,
      question:
        "–ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ?",
      options: ["HTTP", "FTP", "HTTPS", "SMTP"],
      correctAnswer: 2,
      difficulty: "medium",
    },
    {
      id: 5,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–∫—É—Ä—Å–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏?",
      options: [
        "–ü—Ä–æ—Ü–µ—Å—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞",
        "–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–µ–π —Å–∞–º–æ–π —Å–µ–±—è",
        "–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞",
        "–ú–µ—Ç–æ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö",
      ],
      correctAnswer: 1,
      difficulty: "hard",
    },
  ],
  Science: [
    {
      id: 1,
      question: "–°–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞?",
      options: ["92", "118", "108", "126"],
      correctAnswer: 1,
      difficulty: "easy",
    },
    {
      id: 2,
      question: "–ö–∞–∫–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞ –∫–∞–∫ '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–∞–Ω–µ—Ç–∞'?",
      options: ["–í–µ–Ω–µ—Ä–∞", "–ú–∞—Ä—Å", "–Æ–ø–∏—Ç–µ—Ä", "–°–∞—Ç—É—Ä–Ω"],
      correctAnswer: 1,
      difficulty: "easy",
    },
    {
      id: 3,
      question: "–ö–∞–∫–æ–π —É—á–µ–Ω—ã–π –æ—Ç–∫—Ä—ã–ª –∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è?",
      options: [
        "–ê–ª—å–±–µ—Ä—Ç –≠–π–Ω—à—Ç–µ–π–Ω",
        "–ò—Å–∞–∞–∫ –ù—å—é—Ç–æ–Ω",
        "–ì–∞–ª–∏–ª–µ–æ –ì–∞–ª–∏–ª–µ–π",
        "–ù–∏–∫–æ–ª–∞ –¢–µ—Å–ª–∞",
      ],
      correctAnswer: 1,
      difficulty: "medium",
    },
    {
      id: 4,
      question: "–ß—Ç–æ –∏–∑–º–µ—Ä—è–µ—Ç –±–∞—Ä–æ–º–µ—Ç—Ä?",
      options: [
        "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É",
        "–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ",
        "–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞",
        "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞",
      ],
      correctAnswer: 1,
      difficulty: "medium",
    },
    {
      id: 5,
      question: "–ö–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∞—Ç–æ–º–Ω—ã–π –Ω–æ–º–µ—Ä 1?",
      options: ["–ö–∏—Å–ª–æ—Ä–æ–¥", "–£–≥–ª–µ—Ä–æ–¥", "–í–æ–¥–æ—Ä–æ–¥", "–ì–µ–ª–∏–π"],
      correctAnswer: 2,
      difficulty: "hard",
    },
  ],
  History: [
    {
      id: 1,
      question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –Ω–∞—á–∞–ª–∞—Å—å –í—Ç–æ—Ä–∞—è –º–∏—Ä–æ–≤–∞—è –≤–æ–π–Ω–∞?",
      options: ["1939", "1941", "1937", "1945"],
      correctAnswer: 0,
      difficulty: "easy",
    },
    {
      id: 2,
      question: "–ö—Ç–æ –±—ã–ª –ø–µ—Ä–≤—ã–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –°–®–ê?",
      options: [
        "–¢–æ–º–∞—Å –î–∂–µ—Ñ—Ñ–µ—Ä—Å–æ–Ω",
        "–î–∂–æ—Ä–¥–∂ –í–∞—à–∏–Ω–≥—Ç–æ–Ω",
        "–ê–≤—Ä–∞–∞–º –õ–∏–Ω–∫–æ–ª—å–Ω",
        "–ë–µ–Ω–¥–∂–∞–º–∏–Ω –§—Ä–∞–Ω–∫–ª–∏–Ω",
      ],
      correctAnswer: 1,
      difficulty: "easy",
    },
    {
      id: 3,
      question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É —á–µ–ª–æ–≤–µ–∫ –≤–ø–µ—Ä–≤—ã–µ –≤—ã—Å–∞–¥–∏–ª—Å—è –Ω–∞ –õ—É–Ω—É?",
      options: ["1965", "1969", "1972", "1958"],
      correctAnswer: 1,
      difficulty: "medium",
    },
    {
      id: 4,
      question: "–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª '–ö–∞–ø–∏—Ç–∞–ª'?",
      options: [
        "–§—Ä–∏–¥—Ä–∏—Ö –≠–Ω–≥–µ–ª—å—Å",
        "–í–ª–∞–¥–∏–º–∏—Ä –õ–µ–Ω–∏–Ω",
        "–ö–∞—Ä–ª –ú–∞—Ä–∫—Å",
        "–ò–æ—Å–∏—Ñ –°—Ç–∞–ª–∏–Ω",
      ],
      correctAnswer: 2,
      difficulty: "medium",
    },
    {
      id: 5,
      question: "–ö–æ–≥–¥–∞ –±—ã–ª–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∞ Magna Carta?",
      options: ["1066", "1215", "1453", "1776"],
      correctAnswer: 1,
      difficulty: "hard",
    },
  ],
  All: [],
};

const app_interface = document.querySelector(".app");
let chosen_questions = [];
let current_question = 0;
let right_answers = 0;
let wrong_answers = 0;
let total_points = 0;
let theme = null;
let currentCorrectAnswer = null;
let timerId = null;
let useTimer = false;
const QUESTION_TIME = 5;

initStartPage();

function initStartPage() {
  app_interface.innerHTML = starting_page_html;

  const theme_choice_div = document.querySelector(".themes_container");
  const timer_checkbox = document.querySelector(".checkbox");

  theme_choice_div.addEventListener("click", function (event) {
    const clickedTheme = event.target.closest("button.theme");
    if (!clickedTheme) return;

    if (theme === clickedTheme) {
      clickedTheme.classList.remove("pressed");
      theme = null;
      return;
    }

    if (theme) theme.classList.remove("pressed");

    clickedTheme.classList.add("pressed");
    theme = clickedTheme;
  });

  document.querySelector(".start_quiz_btn").addEventListener("click", () => {
    if (!theme) {
      alert("–¢–µ–º–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É");
      return;
    }

    useTimer = !!document.querySelector(".checkbox").checked;

    choseQuestions();
    current_question = 0;
    right_answers = 0;
    wrong_answers = 0;
    total_points = 0;

    nextQuestion();
  });
}

function choseQuestions() {
  chosen_questions = [];
  const name = theme.getAttribute("name");
  if (name === "All") {
    for (let t in questions) {
      if (t !== "All") chosen_questions.push(...questions[t]);
    }
  } else {
    chosen_questions.push(...questions[name]);
  }
}

function nextQuestion() {
  if (timerId) {
    clearTimeout(timerId);
    timerId = null;
  }

  if (current_question >= chosen_questions.length) {
    showResults();
    return;
  }

  app_interface.innerHTML = question_page_html;

  const question_header = document.querySelector(".question_header");
  const question_text = document.querySelector(".question_text");
  const answers = Array.from(document.querySelectorAll(".answer"));
  const timer_line = document.querySelector(".timer_line");

  const q = chosen_questions[current_question];
  question_header.textContent = "–í–æ–ø—Ä–æ—Å –Ω–æ–º–µ—Ä " + (current_question + 1);
  question_text.textContent = q.question;

  answers.forEach((btn, idx) => {
    btn.textContent = q.options[idx];
    btn.dataset.index = idx;

    btn.classList.remove("pressed", "wrong");
  });

  currentCorrectAnswer = answers[q.correctAnswer];

  if (useTimer && timer_line) {
    timer_line.style.transition = "none";
    timer_line.style.width = "100%";
    void timer_line.offsetWidth;
    timer_line.style.transition = `width ${QUESTION_TIME}s linear`;
    timer_line.style.width = "0%";

    timerId = setTimeout(() => {
      wrong_answers++;
      current_question++;
      nextQuestion();
    }, QUESTION_TIME * 1000);
  } else if (timer_line) {
    timer_line.style.transition = "none";
    timer_line.style.width = "100%";
  }
}

function showResults() {
  if (timerId) {
    clearTimeout(timerId);
    timerId = null;
  }

  app_interface.innerHTML = final_page_html;
  document.querySelector(".total_points").textContent =
    "–ù–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤: " + total_points;
  document.querySelector(".right_answers").textContent =
    "–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: " + right_answers;
  document.querySelector(".wrong_answers").textContent =
    "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: " + wrong_answers;

  document
    .querySelector(".to_the_main_button")
    .addEventListener("click", () => {
      theme = null;
      chosen_questions = [];
      current_question = 0;
      right_answers = 0;
      wrong_answers = 0;
      total_points = 0;
      initStartPage();
    });
}

document.addEventListener("click", function (event) {
  const clicked = event.target.closest(".answer");
  if (!clicked) return;

  const container = document.querySelector(".answer_variants_container");
  if (!container || !container.contains(clicked)) return;

  if (!currentCorrectAnswer) return;

  if (timerId) {
    clearTimeout(timerId);
    timerId = null;
  }

  const timer_line = document.querySelector(".timer_line");
  if (timer_line) {
    const computedStyle = window.getComputedStyle(timer_line);
    const currentWidth = computedStyle.width;
    timer_line.style.transition = "none";
    timer_line.style.width = currentWidth;
  }

  if (clicked === currentCorrectAnswer) {
    right_answers++;
    total_points++;
    clicked.classList.add("correct");
  } else {
    wrong_answers++;
    total_points--;
    clicked.classList.add("wrong");
    currentCorrectAnswer.classList.add("correct");
  }

  setTimeout(() => {
    current_question++;
    nextQuestion();
  }, 1000);
});
